#! /bin/bash
# prepares a directory containing atlas, mask, dilated mask and template
#
# Copyright 2012, jan.scholz@phenogenomics.ca at MICe

[ -z "$TMPDIR" ] && { echo "ERROR: \$TMPDIR not set"; exit 1; }

usage ()
{
	echo "Usage: $(basename $0) [-o OUTDIR] -b BASE"
	echo "  -b BASE        mouse build model base"
	echo "  -o OUTDIR      output directory (default: BASE_masks)"
	echo "  -m             mask individual brains (NOT WORKING YET)"
	echo "  -n             convert atlas-spaced output to nifti format"
	#echo "  -t TEMPLATE    the average, as a background for viewing"
	echo "  -a ATLAS       labeled brain structures, used to generate the masks"
	echo "  -A ALIGNATLAS  align this atlas using nlin4.xfm"
	echo"                  (needs to be in the space of the original resampled_atlas.mnc)"
}


resample_atlas ()
{

INATLAS=$1
XFM=${MBMBASE}_resampled_atlas/nlin4.xfm

[ -f "$XFM" ] || { echo "ERROR: could not find transformation: $XFM"; exit 1; }

mincreshape -dimorder zspace,yspace,xspace $INATLAS $TDIR/atlas1.mnc

echo mincresample -clobber -2 -like $TEMPLATE -nearest_neighbour -keep_real_range -transform $XFM $TDIR/atlas1.mnc ${OUTDIR}/atlas2.mnc

}



while getopts t:b:o:a:A:mnv opt
do
    case "$opt" in
      b)  MBMBASE="${OPTARG}";;
      o)   OUTDIR="${OPTARG}";;
      #t) TEMPLATE="${OPTARG}";;
      a)    ATLAS="${OPTARG}";;
      A) ALIGNATLAS="${OPTARG}";;
  	  m)  MASKING="lsq6";;
  	  n)    NIFTI=true;;
  	  v)  VERBOSE="-v";;
      \?)  usage; exit 1;;
    esac
done
shift `expr $OPTIND - 1`


[ -z "$MBMBASE" ] && { usage; exit 1; }

OUTDIR=${OUTDIR:-$PWD/${MBMBASE}_masks}
mkdir -p $OUTDIR

[ -z "$TEMPLATE" ] && TEMPLATE=`ls ${MBMBASE}_nlin/nlin-?.mnc| tail -n1`
ATLAS=${ATLAS:-${MBMBASE}_resampled_atlas/resampled_atlas.mnc}

[ -f "$TEMPLATE" ] || { echo "ERROR: could not find template: $TEMPLATE"; exit 1; }
[ -f "$ATLAS" ]    || { echo "ERROR: could not find atlas: $ATLAS"; exit 1; }


TDIR=$TMPDIR/$USER/$$; mkdir -p $TDIR
trap "{ rm -fr $TDIR; echo 'cleaned up temp. directory'; exit 255; }" SIGTERM SIGINT


autocrop  -clobber -isoexpand 20% $ATLAS $TDIR/atlasmask.mnc
mincmorph -clobber -successive 'B[0.5:999]DDDDDDEEEEEE' $TDIR/atlasmask.mnc $TDIR/atlasmask2.mnc
#autocrop  -clobber -from $ATLAS $TDIR/atlasmask2.mnc $OUTDIR/mask.mnc
mincresample -clobber -nearest -like $ATLAS $TDIR/atlasmask2.mnc $OUTDIR/mask.mnc
#mincreshape -clobber $TDIR/atlasmask2.mnc $OUTDIR/mask.mnc -start 34,68,45 -count 172,340,225  # use this when -from takes the wron y-extent


autocrop  -clobber -isoexpand 20% $ATLAS $TDIR/atlasmask.mnc
mincmorph -clobber -successive 'B[0.5:999]DDDDDD' $TDIR/atlasmask.mnc $TDIR/atlasmask2.mnc
#autocrop  -clobber -from $ATLAS $TDIR/atlasmask2.mnc $OUTDIR/mask_dil.mnc
mincresample -clobber -nearest -like $ATLAS $TDIR/atlasmask2.mnc $OUTDIR/mask_dil.mnc
#mincreshape -clobber $TDIR/atlasmask2.mnc $OUTDIR/mask_dil.mnc -start 34,68,45 -count 172,340,225


cp ${VERBOSE} $ATLAS $OUTDIR/atlas.mnc
cp ${VERBOSE} $TEMPLATE $OUTDIR/template.mnc



[ -z "$ALIGNATLAS" ] || resample_atlas



# backproject atlas mask to individuals
if [ ! -z ${MASKING} ]; then
	for XFM in ${MBMBASE}_processed/*/transforms/*-final-to_lsq6.xfm; do
		IMG=${MBMBASE}_processed/*/resampled/`basename $XFM -final-to_lsq6.xfm`-lsq6.mnc
		OUT=$OUTDIR/`basename $IMG .mnc`_mask.mnc
		echo "mincresample -clobber -quiet -nearest_neighbour -like $IMG -transform $XFM $OUTDIR/mask_dil.mnc $OUT"
	done
fi


# nifti conversion
if [ ! -z ${NIFTI} ]; then
	which miceconvert || { echo "ERROR: could not convert to nifti, miceconvert not found"; exit 1; }
	for f in $OUTDIR/mask.mnc  $OUTDIR/mask_dil.mnc $OUTDIR/atlas.mnc $OUTDIR/template.mnc; do
		miceconvert $f $OUTDIR/nii/`basename $f` || { echo "Warning: could not convert to nifti, skipping conversion"; exit 1; }
	done
fi

#echo $TDIR
#read
rm -rf $TDIR

exit 0

