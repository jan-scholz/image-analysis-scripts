#! /bin/bash
# converts minc to nifti
#
# Copyright 2012, jan.scholz@phenogenomics.ca at MICe


for f in fslchfiletype remove_ext imcp nii2mnc mincresample; do
	which $f > /dev/null || { echo "ERROR: failed to find dependency: $f"; exit 1; }
done


usage ()
{
	echo "Usage: $(basename $0) [MNC2NII_ARGS] INPUT OUTPUT"
	echo "  Converts between MINC and NIFTI format"
	echo "  INPUT and OUTPUT are .mnc and .nii.gz files"
	echo "  NII2MNCARGS        nii2mnc options, e.g. -unsigned -short"
}

colorize(){
    GREEN="\033[0;32m"
    CYAN="\033[0;36m"
    GRAY="\e[1;30m"
    GREY="\e[1;30m"
    #GREY="\033[0;37m"
    BLUE="\033[0;34m"
    YELLOW="\033[0;33m"
    NORMAL="\033[m"
    color=\$${1:-NORMAL}
    # activate color passed as argument
    echo -ne "`eval echo ${color}`"
    # read stdin (pipe) and print from it:
    cat
    # Note: if instead of reading from the pipe, you wanted to print
    # the additional parameters of the function, you could do:
    # shift; echo $*
    # back to normal (no color)
    echo -ne "${NORMAL}"
}


###############################################################################
# MAIN                                                                        #
###############################################################################
#while getopts v opt
#do
#    case "$opt" in
#      v) VERBOSE="-v";;
#      \?)  usage; exit 1;;
#    esac
#done
#shift `expr $OPTIND - 1`

VERBOSE=

[ $# -lt 2 ] && { usage; exit 1; }

if [ "$1" = "-c" ]; then
	COLOR=GRAY
	shift
else
	COLOR=NORMAL
fi

NII2MNCARGS="${@:1:$((${#}-2))}"
INPUT="${@: -2:1}"
OUTPUT="${@: -1}"


FILETYPE=`micetest $INPUT`
[ $? -ne 0 ] && exit 1
[ -z "$VERBOSE" ] || echo FILETYPE $FILETYPE


TDIR=$TMPDIR/$USER/$$; mkdir -p $VERBOSE $TDIR
trap "{ rm -rf $TDIR; exit 255; }" SIGINT SIGTERM


if [ NIFTI = "${FILETYPE:0:5}" ]; then

	echo nifti-minc

	INPUT=`remove_ext $INPUT`
	OUTPUT=${OUTPUT%.mnc}.mnc

	fslchfiletype NIFTI $INPUT $TDIR/nii
	nii2mnc $TDIR/nii.nii $TDIR/minc.mnc 2> /dev/null | colorize $COLOR
	[ -z "$NII2MNCARGS" ] || { mv $TDIR/minc.mnc $TDIR/minc2.mnc; mincreshape -clobber $NII2MNCARGS $TDIR/minc2.mnc $TDIR/minc.mnc; }

	[ -f $TDIR/minc.mnc ] || { echo "ERROR: conversion did not work" >/dev/stderr; exit 1; }
	mkdir -p `dirname $OUTPUT`
	cp $TDIR/minc.mnc $OUTPUT

elif [ MINC = "${FILETYPE:0:4}" ]; then

	echo minc-nifti

	INPUT=$INPUT
	OUTPUT=`remove_ext $OUTPUT`

# these should be INTEGER not FLOATS!!!!
#	TOTALSUM=`printf "%.0f" $(mincstats -sum $INPUT | awk '{print $OUTPUT}')`
#	  BINSUM=`printf "%.0f" $(mincstats -range 1,1 -count $INPUT | awk '{print $3}')`
#
#	if [ "$TOTALSUM" -eq "$BINSUM" ]; then
#		#[ -z "$VERBOSE" ] || echo "using mask clutch"
#		echo "Warning: using mask clutch"
#		cp $INPUT $TDIR/FLOAT.mnc
#	else
#		mincresample -2 -quiet -clobber  -keep_real_range -float $INPUT $TDIR/FLOAT.mnc
#	fi

	mincresample -2 -quiet -clobber  -keep_real_range -float $INPUT $TDIR/FLOAT.mnc

	mnc2nii $TDIR/FLOAT.mnc $TDIR/nii.nii 2> /dev/null | colorize $COLOR
	fslchfiletype NIFTI_GZ $TDIR/nii.nii || rm $TDIR/nii.nii
	rm -f $TDIR/FLOAT.mnc

	[ -f $TDIR/nii.nii.gz ] || { echo "ERROR: conversion did not work" >/dev/stderr; exit 1; }
	mkdir -p `dirname $OUTPUT`
	imcp $TDIR/nii.nii.gz $OUTPUT

fi

rm -rf $TDIR
exit 0

